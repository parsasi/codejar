{"version":3,"sources":["assets/logo_transparent_hori.png","assets/logo_transparent.png","assets/logo_transparent_small.png","contexts/ShareModalContext.js","components/WindowBarListShare.js","components/WindowBarListAdd.js","components/WindowBarList.js","components/Fa.js","components/WindowBarControlsSave.js","helpers/hashFileContent.js","thunks/postFileContent.js","helpers/getServerRoute.js","hooks/useSaveFile.js","components/WindowBarControlsSaveLogic.js","components/WindowBarControls.js","components/WindowBar.js","thunks/fetchFilesThunk.js","thunks/fetchContentThunk.js","thunks/postFileCreate.js","helpers/getExtention.js","helpers/createFileObj.js","helpers/getFilelang.js","reducers/FileReducer.js","components/MenuItem.js","components/MenuItemLogic.js","hooks/useFetchFileContent.js","contexts/AddFileModalContext.js","components/AddFileButton.js","components/AddFileButtonLogic.js","components/MenuLoading.js","components/Menu.js","components/MenuLogic.js","hooks/useFetchFiles.js","components/SideBar.js","components/Monaco.js","components/CodeEditor.js","components/CodeEditorLogic.js","components/RightSideBarDownload.js","components/DragZone.js","helpers/sanitize.js","helpers/validator.js","components/DragZoneLogic.js","helpers/fileUploadValidator.js","helpers/readFileContent.js","components/RightSideBarUpload.js","components/RightSideBar.js","components/MiddleRow.js","contexts/StatusContext.js","components/StatusBar.js","components/StatusbarLogic.js","components/StatusContextProvider.js","components/ShareModalContent.js","components/Modal.js","components/ShareModalContentLogic.js","components/ShareModalContextProvider.js","components/AddFileModalContextProvider.js","components/AddFileModalContent.js","components/AddFileModalContentLogic.js","helpers/isDuplicate.js","components/EditorContainer.js","components/EditorContainerLogic.js","thunks/fetchWorkspaceCodes.js","components/LoadingWorkspace.js","components/Workspace.js","components/WorkspaceContainer.js","components/LandingPageContainer.js","thunks/postWorkspaceCreate.js","components/LandingPageContainerLogic.js","reducers/WorkspaceReducer.js","stores/store.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","ShareModalContext","createContext","WindowBarListShare","props","useContext","setIsOpen","className","onClick","WindowBarListAdd","WindowBarList","Fa","icon","size","spin","WindowBarControlsSave","saveClickHandler","faSave","content","hash","length","i","charCodeAt","postContent","createAsyncThunk","nanoId","workspaceId","axios","post","nanoid","workspaceid","useSaveFile","dispatch","useDispatch","currentFile","useSelector","state","files","workspace","hashFileContent","savedHash","id","WindowBarControlsSaveLogic","saveFile","e","preventDefault","WindowBarControls","defaultChecked","icons","checked","faCloudDownloadAlt","unchecked","WindowBar","fetchPosts","wsId","get","params","wsid","fetchContent","postFile","extention","name","concatArray","array","reduce","a","b","nameAndExtention","fileName","fileNameArray","split","fileExtention","pop","getExtention","now","Date","lang","extentionToLang","fileNameToLang","getFileLang","timeCreated","lastUpdated","current","saved","syncing","error","filesSlice","createSlice","initialState","allFiles","loadingFilesStatus","reducers","addFile","action","map","item","unshift","payload","changeCurrentFileContent","changeCurrentFile","find","extraReducers","fetchFiles","pending","fulfilled","loadedFiles","data","concat","createFileObj","nano_id","rejected","meta","arg","hashed","actions","MenuItem","_id","file","save","menuItemClickHandler","faSync","faExclamationTriangle","MenuItemLogic","fetchFileContent","useFetchFileContent","extentionToIconMap","css","faCss3","html","faHtml5","js","faJs","py","faPython","java","faJava","md","faMarkdown","other","faDotCircle","figureOutTheIcon","useEffect","currentTarget","getAttribute","AddFileModalContext","AddFileButton","href","_","AddFileButtonLogic","MenuLoading","faCircleNotch","Menu","src","Logo","alt","loading","MenuLogic","useFetchFiles","SideBar","Monaco","width","height","language","value","onChange","theme","CodeEditor","CodeEditorLogic","text","RightSideBarDownload","faFileDownload","DragZone","isDraggedClass","children","status","sanitize","require","validateFileName","test","DragZoneContainer","prpos","useState","isDraggedOver","setIsDraggedOver","fileStatus","setFileStatus","onDragOver","onDragEnter","onDragLeave","onDrop","dataTransfer","options","maxSize","allowedExtentions","preventedExtentions","nameValidation","sizeValidation","extentionValidation","indexOf","type","errors","push","fileUploadValidator","Promise","resolve","reject","fileReader","FileReader","readAsText","console","log","onerror","event","abort","onload","target","result","readFileContent","then","results","newFileObj","catch","RightSideBarUpload","faFileUpload","RightSideBar","MiddleRow","StatusContext","StatusBar","visible","StatusBarLogic","setStatus","setTimeout","StatusBarContextProvider","useStatus","Provider","ShareModalContent","publicLink","CopyCodeHandler","parentElement","click","faCopy","isAdmin","adminLink","Modal","isOpen","open","onAfterOpen","style","top","left","right","bottom","marginRight","transform","padding","contentLabel","title","faTimes","ShareModalContentLogic","serverRoute","publicCode","adminCode","publicUrl","adminUrl","copyText","document","getElementById","innerText","navigator","clipboard","writeText","ShareModalContextProvider","AddFileModalContextProvider","AddFileModalContent","addToFiles","querySelector","faPlus","validationError","AddFileModalContentLogic","setValidationError","allFileNames","listOfFileNames","fullFileName","filter","isDuplicate","EditorContainer","EditorContainerLogic","fetchCodes","LoadingWorkspace","logo","Workspace","codeFetchStatus","useParams","ws_id","WorkspaceContainer","LandingPageContainer","newWorkspaceHandler","LandingPageContainerLogic","window","location","replace","postWorkspaceCreate","workspaceSlice","ownerEmail","setworkspaceId","message","configureStore","reducer","fileReducer","workSpaceReducer","App","store","path","component","LandingPageContainerLoigc","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","fetch","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7b58fb9d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_transparent_hori.b395bcdd.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_transparent.a949cc59.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_transparent_small.d37c4c7e.png\";","import {createContext} from 'react'\n\nconst ShareModalContext = createContext([false, () => {}]);\n\nexport default ShareModalContext","import React , {useContext} from 'react'\nimport ShareModalContext from '../contexts/ShareModalContext'\nexport default function WindowBarListShare(props){\n    let [isOpen , setIsOpen] = useContext(ShareModalContext)\n    return (\n        <li className=\"WindowBarListItem\"><button className=\"WindowBarListItemButton\" onClick={() => setIsOpen(true)}>Share</button></li>\n    )\n}","import React from 'react'\nimport {Link , useHistory} from 'react-router-dom'\nexport default function WindowBarListAdd(props){\n    return (\n        <li className=\"WindowBarListItem\"><button className=\"WindowBarListItemButton\">New Workspace</button></li>\n    )\n}","import React from 'react'\nimport '../styles/WindowBarList.css'\nimport WindowBarListShare from './WindowBarListShare'\nimport WindowBarListAdd from './WindowBarListAdd'\nexport default function WindowBarList(props){\n    return (\n        <div className=\"WindowBarListContainer\">\n            <ul className=\"WindowBarList\">\n                <WindowBarListAdd />\n                <WindowBarListShare />\n                <li className=\"WindowBarListItem\"><button className=\"WindowBarListItemButton\">Download</button></li>\n            </ul>\n        </div>\n    )\n}","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport default function Fa(props){\n    return <FontAwesomeIcon icon={props.icon} size={props.size ? props.size : 'sm'} spin={props.spin} />\n}","import React from 'react'\nimport { faSave  } from '@fortawesome/free-solid-svg-icons'\nimport Fa from './Fa'\nexport default function WindowBarControlsSave(props){\n    return (\n        <li className=\"controlListItem\" onClick={props.saveClickHandler}><a><Fa icon={faSave} size=\"lg\"/></a></li>\n    )\n}","export default (content) => {\n        let hash = 0;\n        if (content.length == 0) {\n            return hash;\n        }\n        for (let i = 0; i < content.length; i++) {\n            let char = content.charCodeAt(i);\n            hash = ((hash<<5)-hash)+char;\n            hash = hash & hash; // Convert to 32bit integer\n        }\n        return hash;\n}\n\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios  from 'axios'\nimport getServerRoute from '../helpers/getServerRoute'\nconst postContent = createAsyncThunk('workspace/postContent',({nanoId , content , workspaceId}) => {\n    const serverRoute = getServerRoute()\n    const results =  axios.post(`${serverRoute}ws/content` , {nanoid : nanoId , content : content , workspaceid : workspaceId})\n    return results\n})\nexport default postContent","export default () => {\n    return process.env.NODE_ENV === 'development' ? 'http://localhost:8080/' : 'https://codejar-live.herokuapp.com/'\n}","import hashFileContent from '../helpers/hashFileContent'\nimport {useDispatch , useSelector} from 'react-redux'\nimport postContent from '../thunks/postFileContent'\n\nconst useSaveFile = () => {\n    const dispatch  = useDispatch()\n    const currentFile = useSelector(state => state.files.currentFile)\n    const workspaceId = useSelector(state => state.workspace.workspaceId)\n    const hash = hashFileContent(currentFile.content)\n    return () => {\n        if(hash !== currentFile.savedHash){\n            dispatch(postContent({nanoId : currentFile.id , content :  currentFile.content , workspaceId }))\n        }\n    }\n}\n\nexport default useSaveFile","import React from 'react'\nimport WindowBarControlsSave from './WindowBarControlsSave'\nimport useSaveFile from '../hooks/useSaveFile'\n\nexport default function WindowBarControlsSaveLogic(props){\n    const saveFile = useSaveFile()\n\n    function saveClickHandler(e){\n        e.preventDefault()\n        saveFile()\n    }\n    return (\n        <WindowBarControlsSave saveClickHandler={saveClickHandler} />\n    )\n}\n\n","import React from 'react'\nimport Fa from './Fa'\nimport WindowBarControlsSaveLogic from './WindowBarControlsSaveLogic'\nimport { faSave , faCloudDownloadAlt } from '@fortawesome/free-solid-svg-icons'\nimport Toggle from 'react-toggle'\nimport 'react-toggle/style.css'\nexport default function WindowBarControls(props){\n    return (\n        <div className=\"controls\">\n            <ul className=\"controlsList\">\n                <li className=\"controlListItem\"><Toggle defaultChecked={true} icons={{checked: <Fa icon={faCloudDownloadAlt} size=\"xs\" />, unchecked:  <Fa icon={faCloudDownloadAlt} size=\"xs\"/>}}></Toggle></li>\n                <WindowBarControlsSaveLogic />\n            </ul>\n        </div>\n    )\n}","import React from 'react'\nimport '../styles/WindowBar.css'\nimport WindowBarList from './WindowBarList'\nimport WindowBarControls from './WindowBarControls'\nexport default function WindowBar(props){\n    return (\n        <div className=\"windowbar\">\n                <WindowBarList />\n            <WindowBarControls />\n        </div>\n    )\n}","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios  from 'axios'\nimport getServerRoute from '../helpers/getServerRoute'\nconst fetchPosts = createAsyncThunk('files/fetchFiles',(wsId) => {\n    const serverRoute = getServerRoute()\n    const results =  axios.get(`${serverRoute}ws/files` , { params : {wsid : wsId}})\n    return results\n})\nexport default fetchPosts","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios  from 'axios'\nimport getServerRoute from '../helpers/getServerRoute';\nconst fetchContent = createAsyncThunk('files/fetchContent',(nanoId) => {\n    const serverRoute = getServerRoute()\n    const ressults =  axios.get(`${serverRoute}ws/content` , { params : {nanoid : nanoId}})\n    return ressults\n})\nexport default fetchContent","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios  from 'axios'\nimport getServerRoute from '../helpers/getServerRoute'\nconst postFile = createAsyncThunk('workspace/postFile',({nanoId , extention ,  name , workspaceId , content }) => {\n    const serverRoute = getServerRoute()\n    const results =  axios.post(`${serverRoute}ws/file` , {nanoid : nanoId , name , extention , workspaceid : workspaceId , content})\n    return results\n})\nexport default postFile","export default function getExtention(fileName){\n    const fileNameArray = fileName.split('.')\n    const fileExtention = fileNameArray.length > 1 ? fileNameArray.pop() : ''\n    const fileNameString = concatArray(fileNameArray)\n    return {name : fileNameString , extention : fileExtention }\n}\n\nconst concatArray = (array) => {\n    return array.reduce((a,b) => a+'.'+b)\n}","import getExtention from './getExtention'\nimport getFileLang from './getFilelang'\nexport default ({name , extention , id , content , }) => {\n    if(!extention){\n        const nameAndExtention = getExtention(name)\n        name = nameAndExtention.name\n        extention = nameAndExtention.extention\n    }\n    const now = new Date()\n    const lang = getFileLang(name , extention)\n    const newFile = {\n        id : id,\n        name : name,\n        extention : extention,\n        lang: lang,\n        content : content,\n        timeCreated : now,\n        lastUpdated : now,\n        current : true,\n        saved : false,\n        syncing : false,\n        error : false,\n        savedHash : ''\n    }\n    return newFile\n}","export default (fileName , fileExtention) => {\n    const extentionToLang  = {\n        'js' : 'javascript',\n        'css' : 'css',\n        'cs' : 'csharp',\n        'html' : 'html',\n        'json' : 'json',\n        'ini' : 'ini',\n        'ts' : 'typescript',\n        'php' : 'php',\n        'gitignore' : 'plaintext',\n        'py' : 'python',\n        'java' : 'java',\n        'md' : 'markdown',\n        'sql' : 'sql'\n    }\n    const fileNameToLang = {\n        'dockerfile' : 'dockerfile'\n    }\n    const defaultType = 'plaintext'\n\n    if(extentionToLang[fileExtention]){\n        return extentionToLang[fileExtention]\n    }else if(fileNameToLang[fileName]){\n        return fileNameToLang[fileName]\n    }\n    return defaultType\n}","import { createSlice  } from '@reduxjs/toolkit'\nimport hashFileContent from '../helpers/hashFileContent'\nimport fetchFiles from '../thunks/fetchFilesThunk'\nimport fetchContent from '../thunks/fetchContentThunk'\nimport postContent from '../thunks/postFileContent'\nimport postFile from '../thunks/postFileCreate'\nimport createFileObj from '../helpers/createFileObj'\nconst fileInstance = {\n    id: '',\n    name : '',\n    extention : '',\n    lang : '',\n    timeCreated : '',\n    content : '',\n    lastUpdated : '',\n    current:false,\n    saved : false,\n    syncing: false,\n    error : false,\n    savedHash : ''\n}\nexport const filesSlice = createSlice({\n  name: 'files',\n  initialState: {\n        allFiles : [],\n        currentFile : fileInstance,\n        loadingFilesStatus : 'idle',\n        error : null\n    },\n    reducers:{\n        addFile: (state, action) => {\n            state.allFiles.map(item => item.current = false)\n            state.allFiles.unshift(action.payload)\n            state.currentFile = action.payload\n        },\n        changeCurrentFileContent : (state,action) => {\n            state.currentFile.content = action.payload.content\n            state.allFiles.map(item => item.id === state.currentFile.id ? item.content = action.payload.content : null)\n        },\n        changeCurrentFile : (state,action) => {\n            state.allFiles.map(item => {\n                item.current = item.id === action.payload.id ? true : false\n            })\n            state.currentFile = state.allFiles.find(item => item.id === action.payload.id)\n        }\n    },\n    extraReducers : {\n        [fetchFiles.pending] : (state , action) => {\n            state.loadingFilesStatus = 'pending'\n        },\n        [fetchFiles.fulfilled] : (state , action) => {\n            state.loadingFilesStatus = 'fulfilled'\n            const loadedFiles = action.payload.data\n            state.allFiles = state.allFiles.concat(loadedFiles.map(item => (createFileObj({name : item.name , extention : item.extention , id : item.nano_id}))))\n        },\n        [fetchFiles.rejected] : (state , action) => {\n            state.loadingFilesStatus = 'failed'\n            state.error =  action.error\n        },\n        [fetchContent.pending] : (state , action) => {\n            state.allFiles.map(item => {\n                if(item.id === action.meta.arg){\n                    item.syncing = true\n                }\n            })\n        },\n        [fetchContent.fulfilled] : (state , action) => {\n            state.allFiles.map(item => {\n                if(item.id === action.meta.arg){\n                    item.syncing = false\n                    item.content = action.payload.data.content\n                }\n            })\n        },\n        [fetchContent.rejected] : (state , action) => {\n            state.allFiles.map(item => {\n                if(item.id === action.meta.arg){\n                    item.syncing = false\n                    item.error = true\n                }\n            })\n        },\n        [postContent.pending] : (state , action) => {\n            state.allFiles.map(item => {\n                if(item.id === action.meta.arg.nanoId){\n                    item.syncing = true\n                }\n            })\n        },\n        [postContent.fulfilled] : (state , action) => {\n            const now = new Date()\n            const hashed = hashFileContent(action.meta.arg.content)\n            state.allFiles.map(item => {\n                if(item.id === action.meta.arg.nanoId){\n                    item.syncing = false\n                    item.lastUpdated = now\n                    item.error = false\n                    item.saved = true\n                    item.savedHash = hashed\n                }\n            })\n            state.currentFile.savedHash = state.currentFile.id === action.meta.arg.nanoId && hashed\n        },\n        [postContent.rejected] : (state , action) => {\n            state.allFiles.map(item => {\n                if(item.id === action.meta.arg.nanoId){\n                    item.syncing = false\n                    item.error = true\n                }\n            })\n        },\n        [postFile.pending] : (state , action) => {\n            state.allFiles.map(item => {\n                if(item.id === action.meta.arg.nanoId){\n                    item.syncing = true\n                }\n            }) \n        },\n        [postFile.fulfilled] : (state , action) => {\n            const now = new Date()\n            state.allFiles.map(item => {\n                if(item.id === action.meta.arg.nanoId){\n                    item.syncing = false\n                    item.lastUpdated = now\n                    item.error = false\n                }\n            }) \n        },\n        [postFile.rejected] : (state , action) => {\n            state.allFiles.map(item => {\n                if(item.id === action.meta.arg.nanoId){\n                    item.syncing = false\n                    item.error = true\n                }\n            }) \n        },\n    }\n})\n\nexport const { addFile , changeCurrentFileContent , changeCurrentFile } = filesSlice.actions\n\nexport default filesSlice.reducer\n","import React from 'react'\nimport Fa from './Fa'\nimport { faSync , faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\nexport default function MenuItem(props){\n    return (\n        <a _id={props.file.id} className={`${props.current} ${props.save} ${props.extention}`} onClick={props.menuItemClickHandler}>\n            <div className=\"MenuItemPanes\">\n                <div className=\"MenuItemFilePane\">\n                    <Fa icon={props.icon}></Fa>\n                    &nbsp;&nbsp;&nbsp;\n                    {props.file.name}\n                    <b>.{props.file.extention}</b>\n                </div>\n                <div className=\"MenuItemIconPane\">\n                    {props.syncing && <Fa icon={faSync} spin={true} />}\n                    {props.error && <Fa icon={faExclamationTriangle}/>}\n                </div>\n            </div>\n        </a>\n    )\n}   ","import React , {useEffect} from 'react'\nimport {useDispatch} from 'react-redux'\nimport {changeCurrentFile} from '../reducers/FileReducer'\nimport MenuItem from './MenuItem'\nimport { faCss3 , faHtml5 , faJs , faJava , faPython , faMarkdown } from '@fortawesome/free-brands-svg-icons'\nimport { faDotCircle } from '@fortawesome/free-solid-svg-icons'\nimport useFetchFileContent from '../hooks/useFetchFileContent'\n\nexport default function MenuItemLogic(props){\n    const fetchFileContent = useFetchFileContent()\n    const dispatch = useDispatch()\n    const current = props.current ? \"current\" : \"\"\n    const save = props.saved ? \"save\": \"css\"\n    const extention = props.file.extention\n    const icon = figureOutTheIcon(extention)\n\n    const menuItemClickHandler = (e) => {\n        const id = e.currentTarget.getAttribute('_id')\n        !props.file.syncing && dispatch(changeCurrentFile({id}))\n    }\n\n    useEffect(() => {\n        fetchFileContent(props.file.id)\n    } , [])\n\n\n    return (<MenuItem file={props.file} error={props.file.error} syncing={props.file.syncing} current={current} save={save} extention={extention} icon={icon} menuItemClickHandler={menuItemClickHandler} />)\n}\n\nfunction figureOutTheIcon(extention){\n    const extentionToIconMap = {\n        css : faCss3,\n        html : faHtml5,\n        js : faJs,\n        py : faPython,\n        java : faJava,\n        md : faMarkdown,\n        other : faDotCircle,\n    }\n    return extentionToIconMap[extention] ? extentionToIconMap[extention] : extentionToIconMap['other']\n}\n\n\n","import {useDispatch} from 'react-redux'\nimport fetchFileContent from '../thunks/fetchContentThunk'\n\nexport default function useFetchFileContent(){\n    const dispatch = useDispatch()\n    return (id) => {\n        dispatch(fetchFileContent(id))\n    }\n}","import React , {createContext} from 'react'\n\nconst AddFileModalContext = createContext([false, () => {}]);\n\nexport default AddFileModalContext","import React from 'react'\n\nexport default function AddFileButton(props){\n    return <a href=\"#\" className=\"addFile\" onClick={_ => props.setIsOpen(true)}> +</a>\n}","import React , {useContext} from 'react'\nimport AddFileModalContext from '../contexts/AddFileModalContext'\nimport AddFileButton from './AddFileButton'\n\nexport default function AddFileButtonLogic(props){\n    let [isOpen , setIsOpen] = useContext(AddFileModalContext)\n    return <AddFileButton setIsOpen={setIsOpen} />\n}","import React from 'react'\nimport { faCircleNotch } from '@fortawesome/free-solid-svg-icons'\nimport Fa from './Fa'\n\n\nexport default function MenuLoading(props){\n    return (\n        <div className=\"MenuLoading\"><Fa icon={faCircleNotch} spin={true} /></div>\n    )\n}","import React , {useEffect} from 'react'\nimport MenuItemLogic from './MenuItemLogic'\nimport AddFileButtonLogic from './AddFileButtonLogic'\nimport '../styles/Menu.css'\nimport MenuLoading from './MenuLoading'\nimport Logo from '../assets/logo_transparent_hori.png'\nexport default function Menu(props){\n        // const sampleArray = [{\"name\":\"main.js\",\"extention\":\".js\",\"lang\":\"javascript\",\"timeCreated\":\"2020-07-29T16:42:13.467Z\",\"content\":\"\",\"lastUpdated\":\"2020-07-29T16:42:13.467Z\",\"current\":true},{\"name\":\"styles.css\",\"extention\":\".js\",\"lang\":\"javascript\",\"timeCreated\":\"2020-07-29T16:42:17.440Z\",\"content\":\"\",\"lastUpdated\":\"2020-07-29T16:42:17.440Z\",\"current\":true}]\n        return (\n        <div className=\"menu\">\n            <div className=\"MenuLogo\">\n                <img src={Logo} alt=\"Logo\"/>\n            </div>\n            <div className=\"MenuFilesContainer\">\n                {\n                    props.loading && (<MenuLoading />)\n                }\n                {props.allFiles.map(item => (<MenuItemLogic current={item.current} saved={item.saved} file={{extention : item.extention , name:item.name , id : item.id , syncing : item.syncing , id : item.id , error : item.error}}/>))}\n                <AddFileButtonLogic />\n            </div>\n        </div>\n    )\n}","import React , {useEffect} from 'react'\nimport { useSelector} from 'react-redux'\nimport Menu from './Menu'\nimport useFetchFiles from '../hooks/useFetchFiles'\nexport default function MenuLogic(){\n    const allFiles = useSelector(state => state.files.allFiles)\n    const filesLoadingStatus  = useSelector(state => state.files.loadingFilesStatus)\n    const loading = filesLoadingStatus === 'pending'\n    const fetchFiles = useFetchFiles()\n    \n    useEffect(_ => fetchFiles() , [])\n    return (\n        <Menu allFiles={allFiles} loading={loading}/>\n    )\n}","import { useSelector , useDispatch } from 'react-redux'\nimport fetchFiles from '../thunks/fetchFilesThunk'\nexport default function useFetchFiles(){\n    const wsId = useSelector(state => state.workspace.workspaceId)\n    const dispatch = useDispatch()\n    return () => {\n        dispatch(fetchFiles(wsId))\n    }\n}","import React from 'react'\nimport MenuLogic from './MenuLogic'\nimport '../styles/SideBar.css'\nexport default function SideBar(props){\n    return (\n        <div className=\"SideBar\">\n            <MenuLogic />\n        </div>\n    )\n}","import React from 'react'\nimport MonacoEditor from 'react-monaco-editor'\nexport default function Monaco(props){\n    return (\n        <MonacoEditor\n        width={props.width}\n        height={props.height}\n        language={props.lang}\n        value={props.value}\n        onChange={e => props.onChange(e)}\n        theme=\"vs-dark\"\n     />\n    )\n}","import React from 'react'\nimport Monaco from './Monaco'\nimport '../styles/CodeEditor.css'\nexport default function CodeEditor(props){\n    return (\n        <div className=\"code\">\n            <Monaco width={100 + '%'} height={100 +'%'} lang={props.currentFile.lang || 'javascript'} value={props.currentFile.content || ''} onChange={props.onChange}/>\n        </div>\n    )\n}","import React from 'react'\nimport { useSelector , useDispatch } from 'react-redux'\nimport CodeEditor from './CodeEditor'\nimport { changeCurrentFileContent } from '../reducers/FileReducer'\nexport default function CodeEditorLogic(props){\n    const dispatch = useDispatch()\n    const currentFile = useSelector(state => state.files.currentFile)\n    const onChange = (text) => {\n        dispatch(changeCurrentFileContent({content : text}))\n    }\n    return (\n        <CodeEditor currentFile={currentFile} onChange={onChange} />\n    )\n}","import React from 'react'\nimport Fa from './Fa'\nimport '../styles/RightSideBarDownload.css'\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons'\n\nexport default function RightSideBarDownload(props){\n    return (\n        <div className=\"RightSideBarDownload\">\n            <Fa size=\"lg\" icon={faFileDownload}/>\n            <p className=\"RightSideBarDownloadText\">Download Files</p>\n        </div>\n    )\n}","import React from 'react'\nimport Fa from './Fa'\nimport { faSync , faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\nexport default function DragZone(props){\n\n    return (\n    <div className={`DragZone ${props.isDraggedClass}`} {...props}>\n        {props.children}\n        {props.status === 'pending' ? <Fa icon={faSync} spin={true}/> : props.status === 'error' ? <Fa icon={faExclamationTriangle} /> : null }\n    </div>\n    )\n}","const sanitize = require(\"sanitize-filename\");\nexport default (fileName) => {\n    return sanitize(fileName)\n}","export function validateFileName(fileName){\n    const pattern = /^[0-9a-zA-Z\\.]*$/;\n    return pattern.test(fileName)\n}\n\n","import React , {useState} from 'react'\nimport {useDispatch , useSelector} from 'react-redux'\nimport {addFile} from '../reducers/FileReducer'\nimport DragZone from './DragZone'\nimport { nanoid } from '@reduxjs/toolkit'\nimport '../styles/DragZone.css'\nimport fileUploadValidator from '../helpers/fileUploadValidator'\nimport readFileContent from '../helpers/readFileContent'\nimport createFileObj from '../helpers/createFileObj'\nimport postFile from '../thunks/postFileCreate' \n\nexport default function DragZoneContainer(prpos){\n    const [isDraggedOver , setIsDraggedOver] = useState(false)\n    const [fileStatus , setFileStatus] = useState('idle')\n    const dispatch = useDispatch()\n    const workspaceId = useSelector(state => state.workspace.workspaceId)\n\n    const dragOver = (e) => {\n        e.preventDefault()\n    }\n    const dragEnter = (e) => {\n        e.preventDefault()\n        setIsDraggedOver(true)\n    }\n    const dragLeave = (e) => {\n        e.preventDefault()\n        setIsDraggedOver(false)\n    }\n    const fileDrop = (e) => {\n        e.preventDefault()\n        const file = e.dataTransfer.files[0];\n        if(file){\n            const fileValidation = fileUploadValidator(file , {maxSize : 16000})\n            if(fileValidation === true){\n                setFileStatus(() => 'pending')\n                readFileContent(file)\n                .then(results => {\n                    const newFileObj = createFileObj({name : file.name , id : nanoid() , content :  results})\n                    dispatch(addFile(newFileObj))\n                    dispatch(postFile({name : newFileObj.name , extention :  newFileObj.extention , nanoId :  newFileObj.id , workspaceId  , content : newFileObj.content} ))\n                    setFileStatus(() => 'idle')\n                    setIsDraggedOver(false)\n                })\n                .catch( setFileStatus(() => 'error'))\n            }else{\n                setFileStatus(() => 'error')\n            }\n        }\n    }\n    const isDraggedClass = isDraggedOver ? 'dragged' : ''\n    return (\n        <DragZone\n        onDragOver={dragOver}\n        onDragEnter={dragEnter}\n        onDragLeave={dragLeave}\n        onDrop={fileDrop}\n        isDraggedClass={isDraggedClass}\n        status={fileStatus}\n        >\n            {prpos.children}\n        </DragZone>\n        )\n}","import sanitize from './sanitize'\nimport {validateFileName} from './validator'\nexport default function fileUploadValidator(file , options = {}){\n    const maxSize = options.maxSize ? options.maxSize : 16000\n    const allowedExtentions = options.allowedExtentions || []\n    const preventedExtentions = options.preventedExtentions || []\n    const fileName = sanitize(file.name)\n    const nameValidation = validateFileName(fileName)\n    const sizeValidation = file.size <= maxSize\n    const extentionValidation = (allowedExtentions.length ? allowedExtentions.indexOf(file.type) >= 0 : true) && (preventedExtentions.length ? preventedExtentions.indexOf(file.type) < 0 : true)\n    const errors = []\n    if(nameValidation && sizeValidation && extentionValidation){\n        return true\n    }else{\n        !nameValidation && errors.push('name')\n        !sizeValidation && errors.push('size')\n        !extentionValidation && errors.push('extention')\n        return errors\n    }\n}\n\n\n\n// lastModified: 1596650123432\n// lastModifiedDate: Wed Aug 05 2020 22:25:23 GMT+0430 (Iran Daylight Time) {}\n// name: \"-home-parsasi-Documents-personal-code-jar-public-src-.txt\"\n// size: 66\n// type: \"text/plain\"\n// webkitRelativePath: \"\"\n// __proto__: File\n// length: 1\n// __proto__: FileList","export default function readFileContent(file){\n    return new Promise((resolve , reject) => {\n        const fileReader = new FileReader()\n        fileReader.readAsText(file)\n        console.log('File Reader : ' , fileReader)\n\n        fileReader.onerror = event => {\n            fileReader.abort()\n            reject(fileReader.error)\n        }\n\n        fileReader.onload = event => {\n            resolve(event.target.result)\n        }\n    })\n}","import React from 'react'\nimport Fa from './Fa'\nimport { faFileUpload } from '@fortawesome/free-solid-svg-icons'\nimport DragZoneLogic from './DragZoneLogic'\nimport '../styles/RightSideBarUpload.css'\nexport default function RightSideBarUpload(props){\n    return (\n        <div className=\"RightSideBarUpload\">\n            <DragZoneLogic>\n                <Fa size=\"lg\" icon={faFileUpload}/>\n                <p className=\"RightSideBarUploadText\">Upload Files <br/> (Drag files here)</p>\n            </DragZoneLogic>\n        </div>\n    )\n}","import React from 'react'\nimport '../styles/RightSideBar.css'\nimport RightSideBarDownload from './RightSideBarDownload'\nimport RightSideBarUpload from './RightSideBarUpload'\nexport default function RightSideBar(props){\n    return (\n        <div className=\"RightSideBarContainer\">\n            <div className=\"RightSideBarSub RightSideBarTop\">\n                <RightSideBarDownload />\n            </div>\n            <div className=\"RightSideBarSub RightSideBarBottom\">\n                <RightSideBarUpload />\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport SideBar from './SideBar'\nimport CodeEditorLogic from './CodeEditorLogic'\nimport RightSideBar from './RightSideBar'\nimport '../styles/MiddleRow.css'\nexport default function MiddleRow(props){\n    return (\n        <div className=\"MiddleRow\">\n            <SideBar />\n            <CodeEditorLogic />\n            <RightSideBar />\n        </div>\n    )\n}","import React , {createContext} from 'react'\n\nconst StatusContext = createContext([{}, () => {}]);\n\nexport default StatusContext","import React from 'react'\nimport '../styles/StatusBar.css'\nexport default function StatusBar(props){\n    return props.visible ? (\n        <div className=\"StatusBarContainer\">\n            <span className=\"StatusBarTex\">{props.text}</span>\n        </div>) : (<span></span>)\n}","import React , {useContext , useEffect} from 'react'\nimport StatusContext from '../contexts/StatusContext'\nimport StatusBar from './StatusBar'\nexport default function StatusBarLogic(props){\n    const [status , setStatus] = useContext(StatusContext)\n    useEffect(() => {\n        setTimeout(() => setStatus({...status , text : '' , visible : false}) , 6000)\n    } , [status , setStatus])\n    return (<StatusBar visible={status.visible} text={status.text} />)\n}","\nimport React,{useState} from 'react' \nimport StatusContext from '../contexts/StatusContext'\nexport default function StatusBarContextProvider(props){\n    const [status , useStatus] = useState({visible : false , text : ''})\n    return (\n        <StatusContext.Provider value={[status , useStatus]}>\n            {props.children}\n        </StatusContext.Provider>\n    )\n}","import React from 'react'\nimport Fa from './Fa'\nimport { faCopy  } from '@fortawesome/free-solid-svg-icons'\nimport '../styles/ShareModalContent.css'\nexport default function ShareModalContent(props){\n    return(\n        <div className=\"ShareModalContantContainer\">\n            <div className=\"ShareModalContantSub\">\n                <span className=\"ShareModalContentText\">Public Link:</span><div className=\"ShareModalContentSubLink\"><span id=\"ShareModalContentPublic\">{props.publicLink}</span><button onClick={(e) => props.CopyCodeHandler(e , 'ShareModalContentPublic')} className=\"ShareModalContentSubCopy\"><Fa onClick={() => this.parentElement.click()} icon={faCopy}/></button></div>\n            </div>\n            {props.isAdmin && (\n                <div className=\"ShareModalContantSub\">\n                     <span className=\"ShareModalContentText\">Admin Link:</span><div className=\"ShareModalContentSubLink\"><span id=\"ShareModalContentAdmin\">{props.adminLink}</span><button onClick={(e) => props.CopyCodeHandler(e , 'ShareModalContentAdmin')} className=\"ShareModalContentSubCopy\"><Fa icon={faCopy}/></button></div>\n                </div>\n            )}\n        </div>\n    )\n}","import React , {useState} from 'react'\nimport ModalElement from 'react-modal'\nimport '../styles/Modal.css'\nimport Fa from './Fa'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nexport default function Modal(props){\n    const customStyles = {\n        content : {\n          top                   : '50%',\n          left                  : '50%',\n          right                 : 'auto',\n          bottom                : 'auto',\n          marginRight           : '-50%',\n          transform             : 'translate(-50%, -50%)',\n          padding: 0\n        }\n      };\n    return (\n        <ModalElement\n          isOpen={props.open}\n          onAfterOpen={props.onAfterOpen && props.onAfterOpen}\n          style={customStyles}\n          contentLabel={props.title ? props.title : ''}\n        >\n          <div className=\"ModalInner\">\n            <div className=\"ModalInnerHeader\">\n              <div className=\"ModalInnerHeaderTitle\">\n                <h2 className=\"ModalInnerHeaderTitleText\">{props.title && props.title}</h2>\n              </div>\n              <div className=\"ModalInnerHeaderCloseContainer\">\n                <button className=\"ModalInnerHeaderCloseButton\" onClick={() => props.setIsOpen(false)}>\n                  <Fa icon={faTimes} size=\"lg\"/>\n                </button>\n              </div>\n            </div>\n            <div className=\"ModalInnerContent\">\n              {props.children }\n            </div>\n          </div>\n        </ModalElement>\n    )\n}\n// <Modal open={true} title=\"Welcome Message\"><h1>Hello World</h1></Modal>\n","import React , {useContext} from 'react'\nimport '../styles/ShareModalContent.css'\nimport {useSelector} from 'react-redux'\nimport StatusContext from '../contexts/StatusContext'\nimport ShareModalContent from './ShareModalContent'\nimport ShareModalContext from '../contexts/ShareModalContext'\nimport Modal from './Modal'\nimport getServerRoute from '../helpers/getServerRoute' \nexport default function ShareModalContentLogic(props){\n    let [, setStatus] = useContext(StatusContext)\n    let [isOpen , setIsOpen] = useContext(ShareModalContext)\n    const serverRoute = getServerRoute()\n    const {publicCode , adminCode} = useSelector(state => state.workspace)\n    const publicUrl = `${serverRoute}ws/${publicCode}`\n    const adminUrl = `${serverRoute}ws/${adminCode}`\n    function CopyCodeHandler(e , id){\n        const copyText = document.getElementById(id).innerText;\n        navigator.clipboard.writeText(copyText)\n        .then(_ => setStatus({visible : true , text : 'Copied to the clipboard'}))\n        .catch(e => setStatus({visible : true , text : 'Error copying the data'}))\n    }\n    return(\n        <Modal open={isOpen} setIsOpen={setIsOpen} title=\"Share this workspace\">\n            <ShareModalContent publicLink={publicUrl} adminLink={adminUrl} isAdmin={!!adminCode} CopyCodeHandler={CopyCodeHandler} />\n        </Modal>\n    )\n}","import React , {useContext , useState} from 'react'\nimport ShareModalContext from '../contexts/ShareModalContext'\n\nexport default function ShareModalContextProvider(props){\n    const [isOpen , setIsOpen] = useState(false)\n    return (\n        <ShareModalContext.Provider value={[isOpen , setIsOpen]}>\n            {props.children}\n        </ShareModalContext.Provider>\n    )\n}","import React , {useState} from 'react'\nimport AddFileModalContext from '../contexts/AddFileModalContext'\n\nexport default function AddFileModalContextProvider(props){\n    const [isOpen , setIsOpen ] = useState(false)\n    return (\n        <AddFileModalContext.Provider value={[isOpen , setIsOpen]}>\n            {props.children}\n        </AddFileModalContext.Provider>\n    )\n}","import React , {useState} from 'react'\nimport Fa from './Fa'\nimport { faPlus  } from '@fortawesome/free-solid-svg-icons'\nimport '../styles/AddFileModalContent.css'\nexport default function AddFileModalContent(props){\n    return(\n        <div className=\"AddFileModalContainer\">\n            <div className=\"AddFileModalInputs\">\n                <input type=\"text\" className=\"AddFileModalInput\" id=\"AddFileModalInput\" /> \n                <button className=\"AddFileModalButton\" onClick={e => props.addToFiles(document.querySelector('#AddFileModalInput').value)}><Fa icon={faPlus} /></button>\n            </div>\n            {props.validationError && (\n            <div className=\"AddFileModalErrors\">\n                <p>Please enter a valid file name.</p>\n            </div>\n            )}\n        </div>\n    )\n}","import React, { useContext , useState  } from 'react'\nimport {useDispatch , useSelector} from 'react-redux'\nimport { nanoid } from '@reduxjs/toolkit'\nimport AddFileModalContent from './AddFileModalContent'\nimport AddFileModalContext from '../contexts/AddFileModalContext'\nimport Modal from './Modal'\nimport {validateFileName } from '../helpers/validator'\nimport {addFile} from '../reducers/FileReducer'\nimport sanitize from '../helpers/sanitize'\nimport createFileObj from '../helpers/createFileObj'\nimport isDuplicate from '../helpers/isDuplicate'\nimport postFile from '../thunks/postFileCreate' \nexport default function AddFileModalContentLogic(props){\n    const [isOpen , setIsOpen] = useContext(AddFileModalContext)\n    const [validationError , setValidationError] = useState(false)\n    const dispatch = useDispatch()\n    const allFileNames = useSelector(state => state.files.allFiles).map(item => item.name + '.' + item.extention)\n    const workspaceId = useSelector(state => state.workspace.workspaceId)\n    function addToFiles(text){\n        text = sanitize(text)\n        if(validateFileName(text)){\n            const newFileObj = createFileObj({name : text , id : nanoid()})\n            if(!isDuplicate(newFileObj.name , newFileObj.extention , allFileNames)){\n                setValidationError(false)\n                dispatch(addFile(newFileObj))\n                dispatch(postFile({name : newFileObj.name , extention :  newFileObj.extention , nanoId :  newFileObj.id , workspaceId  , content : ''} ))\n                setIsOpen(_ => false)\n            }else{\n                setValidationError(true)\n            }\n        }else{\n            setValidationError(true)\n        }\n    }\n    return (\n        <Modal open={isOpen} setIsOpen={setIsOpen} title=\"Create a file\">\n            <AddFileModalContent validationError={validationError} addToFiles={addToFiles}  />\n        </Modal>\n    )\n}\n","export default (name, extention , listOfFileNames) => {\n    const fullFileName = name + '.' + extention\n     return listOfFileNames.filter(item => item === fullFileName).length > 0 ? true : false\n}","import React from 'react'\nimport WindowBar from './WindowBar'\nimport MiddleRow from './MiddleRow'\nimport '../styles/generics.css'\nimport StatusBarLogic from './StatusbarLogic'\nimport StatusContextProvider from './StatusContextProvider'\nimport ShareModalContentLogic from './ShareModalContentLogic'\nimport ShareModalContextProvider from './ShareModalContextProvider'\nimport AddFileModalContextProvider from './AddFileModalContextProvider'\nimport AddFileModalContentLogic from './AddFileModalContentLogic'\n\nexport default function EditorContainer(props){\n    return (\n        <div className=\"EditorContainer\">\n             <StatusContextProvider>\n                <ShareModalContextProvider>\n                    <AddFileModalContextProvider>\n                            <WindowBar/>\n                            <MiddleRow />\n                            <StatusBarLogic />\n                            <AddFileModalContentLogic/>\n                            <ShareModalContentLogic/>\n                    </AddFileModalContextProvider>\n                </ShareModalContextProvider>\n            </StatusContextProvider>\n        </div>\n    )\n}","import React from 'react'\n\nimport EditorContainer from './EditorContainer'\n\nexport default function EditorContainerLogic(props){\n  \n    return <EditorContainer />\n}","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios  from 'axios'\nimport getServerRoute from '../helpers/getServerRoute'\nconst fetchCodes = createAsyncThunk('workspace/fetchCodes',(wsId) => {\n    const serverRoute = getServerRoute()\n    const results =  axios.get(`${serverRoute}ws/exists` , { params : {wsid : wsId}})\n    return results\n})\nexport default fetchCodes","import React from 'react'\nimport '../styles/LoadingWorkspace.css'\nimport logo from '../assets/logo_transparent.png'\nimport { faSync } from '@fortawesome/free-solid-svg-icons'\nimport Fa from './Fa'\n\nexport default function LoadingWorkspace(){\n    return (\n        <div className=\"LoadingWorkspace\">\n            <img className=\"LoadingWorkspaceLogo\" src={logo} />\n            <div className=\"LoadingWorkspaceLoader\">\n                <Fa icon={faSync} spin={true}/>\n            </div>\n        </div>\n    )\n}","import React , {useEffect} from 'react'\nimport { useDispatch , useSelector } from 'react-redux'\nimport EditorContainerLogic from './EditorContainerLogic'\nimport fetchCodes from '../thunks/fetchWorkspaceCodes'\nimport LoadingWorkspace from './LoadingWorkspace'\nimport {\n    Redirect,\n    useParams\n} from \"react-router-dom\";\n\nexport default function Workspace(props){\n    const codeFetchStatus = useSelector(state => state.workspace.codeFetchStatus)\n    const dispatch = useDispatch()\n    const workspaceId = useSelector(state => state.workspace.workspaceId)\n    const {ws_id : wsId} = useParams()\n    useEffect(() => {\n        dispatch(fetchCodes(wsId))\n    }, [])\n    switch(codeFetchStatus){\n        case 'idle':\n            return <LoadingWorkspace />\n        case 'pending':\n            return <LoadingWorkspace />\n        case 'fulfilled':\n            return <EditorContainerLogic />\n        default:\n            return <Redirect />\n    }\n}","import React , {useEffect} from 'react'\nimport Workspace from './Workspace'\nexport default function WorkspaceContainer(props){\n    return (<Workspace />)\n}","import React from 'react'\nimport logo from '../assets/logo_transparent_small.png'\nimport '../styles/LandingPageContainer.css'\nexport default function LandingPageContainer(props){\n    return (\n        <div className=\"LandingPageContainer\">\n            <div className=\"LandingPageLogoContainer\">\n                <img className=\"LandingPageLogo\" src={logo} alt=\"Code Jar Logo\"/>\n            </div>\n            <div className=\"LandingPageButtonsContainer\">\n                <button className=\"LandingPageButton\" onClick={props.newWorkspaceHandler}> CREATE A WORKSPACE </button>\n                <button className=\"LandingPageButton\"> GO TO A WORKSPACE </button>\n            </div>\n        </div>\n    )\n}","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios  from 'axios'\nimport getServerRoute from '../helpers/getServerRoute'\nconst postFile = createAsyncThunk('workspace/create',() => {\n    const serverRoute = getServerRoute()\n    const results =  axios.get(`${serverRoute}ws/create`)\n    return results\n})\nexport default postFile","import React from 'react'\nimport {useDispatch , useSelector} from 'react-redux'\nimport {Redirect } from 'react-router-dom'\nimport LandingPageContainer from './LandingPageContainer'\nimport postWorkspaceCreate  from '../thunks/postWorkspaceCreate'\nexport default function LandingPageContainerLogic(props){\n    const dispatch = useDispatch()\n    function newWorkspaceHandler(){\n        dispatch(postWorkspaceCreate())\n    }\n    const workspaceId = useSelector(state => state.workspace.workspaceId)\n    workspaceId && window.location.replace(`/ws/${workspaceId}`)\n    return <LandingPageContainer newWorkspaceHandler={newWorkspaceHandler} />\n}","import { createSlice  } from '@reduxjs/toolkit'\nimport fetchCodes from '../thunks/fetchWorkspaceCodes'\nimport postWorkspaceCreate from '../thunks/postWorkspaceCreate'\nexport const workspaceSlice = createSlice({\n  name: 'workspace',\n  initialState: {\n        workspaceId : '',\n        ownerEmail : '',\n        publicCode : '',\n        adminCode : '',\n        codeFetchStatus : 'idle',\n        error : null,\n    },\n    reducers:{\n        setworkspaceId: (state, action) => {\n            state.workspaceId = action.payload.id\n        },\n        \n    },\n    extraReducers : {\n        [fetchCodes.pending] : (state , action) => {\n            state.codeFetchStatus = 'pending'\n        },\n        [fetchCodes.fulfilled] : (state , action) => {\n            state.codeFetchStatus = 'fulfilled'\n            state.adminCode = action.payload.data[\"admin_code\"]\n            state.publicCode = action.payload.data[\"public_code\"]\n            state.workspaceId = action.payload.data[\"admin_code\"] ? action.payload.data[\"admin_code\"] : action.payload.data[\"public_code\"]\n        },\n        [fetchCodes.rejected] : (state , action ) => {\n            state.codeFetchStatus = 'error'\n            state.error = action.error.message\n        },\n        [postWorkspaceCreate.pending]: (state , action) => {\n            state.codeFetchStatus = 'pending'\n        },\n        [postWorkspaceCreate.fulfilled]: (state , action) => {\n            state.codeFetchStatus = 'fulfilled'\n            state.workspaceId = action.payload.data.adminCode\n        },\n        [postWorkspaceCreate.rejected]: (state , action) => {\n            state.codeFetchStatus = 'error'\n            state.error = action.error.message\n        }\n    }\n})\n\nexport const { setworkspaceId  } = workspaceSlice.actions\n\nexport default workspaceSlice.reducer\n","import {configureStore } from '@reduxjs/toolkit'\nimport fileReducer from '../reducers/FileReducer'\nimport workSpaceReducer from '../reducers/WorkspaceReducer'\nexport default configureStore({\n    reducer : {\n        files: fileReducer,\n        workspace : workSpaceReducer\n    }\n})","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";  \nimport WorkspaceContainer from './WorkspaceContainer'\nimport LandingPageContainerLoigc from './LandingPageContainerLogic'\nimport store from '../stores/store'\nimport {Provider} from 'react-redux'\nexport default function App(props){\n    return (\n        <Provider store={store}>\n            <Router>\n                    <div className=\"App\">\n                        <Switch>\n                            <Route path=\"/ws/:ws_id\" component={WorkspaceContainer} />\n                            <Route path=\"/\" component={LandingPageContainerLoigc} />\n                        </Switch>\n                    </div>\n            </Router>\n        </Provider>\n\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}